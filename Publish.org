* Module dependencies
Check module dependencies.

#+NAME: CheckModuleDependencies
#+BEGIN_SRC sh :exports both :results output verbatim
./scripts/module-dependencies
#+END_SRC

#+RESULTS: CheckModuleDependencies
: Draw and analyze graphs with 'xdot'.

* Format source files
Format all source files.

#+NAME: CleanFilesStylishHaskell
#+BEGIN_SRC sh :exports both :results output verbatim
./scripts/format-all
#+END_SRC

#+RESULTS: CleanFilesStylishHaskell

* Version
Bump version.

#+NAME: BumpVersion
#+BEGIN_SRC sh :exports both :results output verbatim
./scripts/bump-version minor
#+END_SRC

Recompile project.

* Build
Build project, perform tests, build documentation.

#+NAME: Build
#+BEGIN_SRC sh :exports both :results output verbatim
stack build --test --haddock --bench
#+END_SRC

#+RESULTS: Build

* README and Change Log
Update help in [[file:README.org][README.org]] (don't forget to update the help text with =, b b=),
and [[file:ChangeLog.org][ChangeLog.org]]; export them to Markdown.

* Git
Commit all changes.

Tag new commit with version number created above.

* Distribution tarballs
Create source distribution tarballs.

#+NAME: HackageCreateTarballs
#+BEGIN_SRC sh :exports both :results output verbatim
stack sdist
#+END_SRC

#+RESULTS: HackageCreateTarballs

* Hackage
Upload the source distribution tarballs to Hackage.

Somehow this doesn't work on a project basis, so we have to do it separately for
each package.

#+NAME: HackageUploadTarballs
#+BEGIN_SRC sh :exports both :results output verbatim
for p in elynx-markov elynx-nexus elynx-seq elynx-tools elynx-tree slynx tlynx elynx
do
    (cd "$p" || exit 1
    stack upload .)
done
#+END_SRC

#+RESULTS: HackageUploadTarballs
: Uploading elynx-markov-0.3.0.tar.gz... done!
: Uploading elynx-nexus-0.3.0.tar.gz... done!
: Uploading elynx-seq-0.3.0.tar.gz... done!
: Uploading elynx-tools-0.3.0.tar.gz... done!
: Uploading elynx-tree-0.3.0.tar.gz... done!
: Uploading slynx-0.3.0.tar.gz... done!
: Uploading tlynx-0.3.0.tar.gz... done!
: Uploading elynx-0.3.0.tar.gz... done!

* Documentation
Documentation can be built manually.

#+NAME: HackageUploadDocumentation
#+BEGIN_SRC sh :exports both :results output verbatim
for p in elynx-markov elynx-nexus elynx-seq elynx-tools elynx-tree slynx tlynx elynx
do
    (cd "$p" || exit 1
    SOMETHING LIKE
    cabal haddock --haddock-for-hackage --haddock-hyperlink-source
    cabal upload --documentation --publish dist/pkg-0.1-docs.tar.gz )
done
#+END_SRC
