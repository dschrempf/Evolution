* Module dependencies
Check module dependencies.

#+NAME: CheckModuleDependencies
#+BEGIN_SRC sh :exports both :results output verbatim
./scripts/module-dependencies
#+END_SRC

#+RESULTS: CheckModuleDependencies
: Draw and analyze graphs with 'xdot'.

* Format source files
Format all source files.

#+NAME: CleanFilesStylishHaskell
#+BEGIN_SRC sh :exports both :results output verbatim
./scripts/format-all
#+END_SRC

#+RESULTS: CleanFilesStylishHaskell

* Version
Bump version.

#+NAME: BumpVersion
#+BEGIN_SRC sh :exports both :results output verbatim
./scripts/bump-version minor
#+END_SRC

Recompile project.

* README and Change Log
Update help in [[file:README.org][README.org]] (=, b b=), and [[file:ChangeLog.org][ChangeLog.org]]; export them to Markdown.

Copy files to package directories.
#+NAME: CopyFiles
#+BEGIN_SRC sh :exports both :results output verbatim
for p in elynx-markov elynx-nexus elynx-seq elynx-tools elynx-tree slynx tlynx elynx
do
    for f in README.md ChangeLog.md
    do
        cp $f $p/$f
    done
done
#+END_SRC

#+RESULTS: CopyFiles

* Build
Build project, perform tests, build documentation.

#+NAME: Build
#+BEGIN_SRC sh :exports both :results output verbatim
stack build --test --haddock
#+END_SRC

#+RESULTS: Build

* Git
Commit all changes.

Tag new commit with version number created above.

* Distribution tarballs
Create source distribution tarballs.

#+NAME: HackageCreateTarballs
#+BEGIN_SRC sh :exports both :results output verbatim
stack sdist --pvp-bounds both
#+END_SRC

#+RESULTS: HackageCreateTarballs

* Hackage
Upload the source distribution tarballs to Hackage.

Somehow this doesn't work on a project basis, so we have to do it separately for
each package.

#+NAME: HackageUploadTarballs
#+BEGIN_SRC sh :exports both :results output verbatim
for p in elynx-markov elynx-nexus elynx-seq elynx-tools elynx-tree slynx tlynx elynx
do
    (cd "$p" || exit 1
    stack upload --pvp-bounds both .)
done
#+END_SRC

# [2020-04-28 Tue] The Hackage server is out of date, and documentation has to be
# built manually.

# #+NAME: HackageUploadDocumentation
# #+BEGIN_SRC sh :exports both :results output verbatim
# for p in elynx-markov elynx-nexus elynx-seq elynx-tools elynx-tree slynx tlynx elynx
# do
#     (cd "$p" || exit 1
#     SOMETHING LIKE
#     cabal haddock --haddock-for-hackage --haddock-hyperlink-source
#     cabal upload --documentation --publish dist/pkg-0.1-docs.tar.gz )
# done
# #+END_SRC
