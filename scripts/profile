#!/usr/bin/env bash

# Print which RTS options are available.
# stack exec $program_name -- +RTS -?

# See https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/profiling.html#profiling
# Run the program with
# -p: profiling support
# -S: additional statistics
# -h: memory heap profile
# -H: set heap size
# -K: set stack size
# -l: event log (compile option is necessary)

source include

seqana() {
    msg "Seq-Ana profiling run."
    file_profile="${project_root}/evomod-seq/data/BenchmarkEnsemblMouse.fa.gz"
    #file_profile="${project_root}/evomod-seq/data/Profile.fa.gz"
    stack exec seq-ana --work-dir $prof_dir -- \
          examine -a ProteinI "$file_profile" \
          +RTS -p -l -s || exit 1
    # +RTS -p -hy -l -s || exit 1
}

seqsim() {
    msg "Seq-Sim profiling run."
    file_tree="${project_root}/evomod-seq/data/Newick.tree"
    file_edm="${project_root}/evomod-seq/data/EDMDistsPhylobayes.txt"
    stack exec seq-sim --work-dir $prof_dir -- \
          -t "$file_tree" -o seq-sim.out -e "$file_edm" -m "EDM(LG-Custom)" -l 5000 -S [0] \
          +RTS -p -hc -l -s || exit 1
}

treesim() {
    msg "Tree-Sim profiling run."
    stack exec tree-sim --work-dir $prof_dir -- \
          -t 10 -n 3000 -r 0.5 -u -o tree-sim.out -S [0] \
          +RTS -p -hc -l -s || exit 1
}

graph() {
    msg "Create graphs of the memory heap profiles."
    for f in *.hp
    do
        hp2ps -e10in -c "$f"
    done
}

if [[ $1 == "seqana" ]]
then
    seqana
elif [[ $1 == "seqsim" ]]
then
    seqsim
elif [[ $1 == "treesim" ]]
then
    treesim
else
    echo "Usage: $(basename "$0") (seqana|seqsim|treesim)"
    exit 1
fi

graph
