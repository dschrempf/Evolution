#!/usr/bin/env bash

if [[ -n $INCLUDE_SOURCED ]]; then return; fi
export INCLUDE_SOURCED=TRUE

msg() {
    (( QUIET )) && return
    local mesg
    mesg="$1"; shift
    # printf "${GREEN}==>${ALL_OFF} ${mesg}${ALL_OFF}\n" "$@" >&1
    printf "%s==>%s %s%s\\n" "$GREEN" "$ALL_OFF" "$mesg" "$ALL_OFF" >&1
}
export -f msg

# Check if messages are to be printed using color.
unset ALL_OFF BOLD BLUE GREEN RED YELLOW
if [[ -t 2 ]]; then
    # Prefer terminal safe colored and bold text when tput is supported.
    if tput setaf 0 &>/dev/null; then
        ALL_OFF="$(tput sgr0)"
        BLUE="$(tput setaf 27)"
        GREEN="$(tput setaf 2)"
        RED="$(tput setaf 1)"
        YELLOW="$(tput setaf 3)"
    else
        ALL_OFF="\\e[1;0m"
        BLUE="\\e[1;34m"
        GREEN="\\e[1;32m"
        RED="\\e[1;31m"
        YELLOW="\\e[1;33m"
    fi
fi
readonly ALL_OFF BOLD BLUE GREEN RED YELLOW

project_root=$(stack path | grep "project-root" | tr -s " " | cut -d " " -f 2)
if [[ -z $project_root ]]
then
    echo "Error during project root determination."
    exit 1
fi
export project_root

# XXX: Doesn't work if paths include spaces.
modules=()
while IFS= read -r file; do
    modules=("${modules[@]}" "$file")
done < <(stack query | grep -e "path:.*$project_root" | tr -s " " | cut -d " " -f 3)

export prof_dir=".stack-work-prof"
export prod_dir=".stack-work-prod"
